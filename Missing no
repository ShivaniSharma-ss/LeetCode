 public int missingNumber(int[] nums) {
        Arrays.sort(nums);
        int j=0;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]==j)
                j++;
            else
                return j;
        }
        return j;
    }
    
    T.C O(nlog n)
    S.C O(1)
 
 
 
  public int missingNumber(int[] nums) {
        Map<Integer,Integer>map=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
            map.put(nums[i],1);
        }
        for(int i=0;i<nums.length+1;i++)
        {
            if(!map.containsKey(i))
            {
                return i;
            }
        }
        return 0;
       
}

T.C O(n)
S.C O(n)


M-3 Carl Gauss Formula

sum of n nos n(n+1)/2;
  public int missingNumber(int[] nums) {
        int n=nums.length;
       int asum=n*(n+1)/2;
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum=sum+nums[i];
        }
        int no=asum-sum;
        return no;
       
}
T.C  O(n)
SC O(1)
