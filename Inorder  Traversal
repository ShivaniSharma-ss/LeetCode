class Solution {
    List<Integer>list=new ArrayList<>();
    public List<Integer> inorderTraversal(TreeNode root) {
        if(root==null) return list;
        inorderTraversal(root.left);
        list.add(root.val);
        inorderTraversal(root.right);
        return list;
    }
}

class Solution {
    List<Integer>list=new ArrayList<>();
    public List<Integer> inorderTraversal(TreeNode root) {
       Stack<TreeNode>stack=new Stack<>();
       TreeNode node=root;
       while(true)
       {
       if(node!=null)
       {
       stack.push(node);
       node=node.left;
       }
       else
       {
       if(stack.isEmpty())
       {
       break;
       }
       }
       node=stack.pop();
       list.add(node.val);
       node=node.right;
       
       }
        return list;
    }
}
